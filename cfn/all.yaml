Description: >
  Nested stacks
  Deploy a VPC, with 2 public and private subnets across 2 Availabilty Zones.
  Deploy an Internet Gateway, with a default route on the public subnets. 
  Deploys 2 NAT Gateways (1 in each AZ) and default routes for them in the private subnets.

  Deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across 2 Availability Zones. 

  Deploy a Multi-AZ RDS

Parameters:
  S3BucketName:
    Description: S3 bucket name
    Type: String
    Default: bucket-1337

  Region:
    Description: region
    Type: String
    Default: ap-southeast-2
  
  DbUser:
    Description: user for db
    Type: String
    Default: postgres
  
  DbPassword:
    Description: password for db
    Type: String
    Default: changeme
  
  DBName:
    Description: db name
    Type: String
    Default: mydb

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/vpc.yaml

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/sgroups.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/loadbalancer.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets # ALB accessible from internet
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/ecs.yaml
      Parameters:
        InstanceType: t2.micro # to save costs
        ClusterSize: 2
        MinSize: 1
        MaxSize: 4
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets # for security purposes keep in private subnets
  
  RDS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/rds.yaml
      Parameters:
        DBUsername: !Ref DbUser
        DBPassword: !Ref DbPassword
        DBName: !Ref DBName
        PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2
        SecurityGroup: !GetAtt SecurityGroups.Outputs.RDSSecurityGroup

  # Service:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub https://${S3BucketName}.s3.${Region}.amazonaws.com/service.yaml
  #     Parameters:
  #       VPC: !GetAtt VPC.Outputs.VPC
  #       Cluster: !GetAtt ECS.Outputs.Cluster
  #       DesiredCount: 2
  #       Listener: !GetAtt ALB.Outputs.Listener
  #       Path: /
  #       ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
  #       Image: !Ref Image
  #       ContainerPort: !Ref ContainerPort

Outputs:
  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]] # used to access website
    